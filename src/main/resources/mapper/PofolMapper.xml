<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team1.careercanvas.mapper.PofolMapper">
	<select id="getPofol" resultType="com.team1.careercanvas.vo.PofolVO">
        select portfoliotitle, imgsrc, category, portfolioid
        from portpolio
        where user_userid = #{searchKey}
        <if test="#{searchWord} != ''">
        and portfoliotitle like concat('%',#{searchWord},'%')
        </if>
		order by portfolioid desc
        limit #{onePageRecord} offset #{offsetPoint};
    </select>
	<select id="getPofolCount" resultType="Integer">
		select count(portfoliotitle)
		from portpolio
		where user_userid = #{searchKey}
		<if test="{searchWord} != ''">
			and portfoliotitle like concat('%',#{searchWord},'%');
		</if>
	</select>
	<!-- 김효준 작업 -->
	<select id="getPofolInfo" resultType="com.team1.careercanvas.vo.PofolVO">
		select * from portpolio
		where user_userid=#{searchWord}
		order by portfolioid desc
		limit #{onePageRecord} offset #{offsetPoint};
	</select>

	<select id="getpofolamount" resultType="Integer">
		select count(portfolioid) from portpolio
		where user_userid = #{param1}
	</select>

	<select id="getPofolall" resultType="com.team1.careercanvas.vo.PofolVO">
		select * from portpolio
		where portfolioid = #{param1};
	</select>

	<select id="companyprofile" resultType="com.team1.careercanvas.vo.CompanyVO">
		select * from company
		where user_userid = #{param1};
	</select>
	<select id="getpofollike" resultType="Integer">
		select count(user_userid)
		from portfoliolike
		where portpolio_portfolioid = #{param1};
	</select>

	<select id="isLike" resultType="Integer">
		select count(user_userid)
		from portfoliolike
		where user_userid = #{param2} and portpolio_portfolioid = #{param1};
	</select>

	<insert id="pofolLike">
		insert into portfoliolike(user_userid, portpolio_portfolioid)
		values(#{param2}, #{param1});
	</insert>

	<insert id="reportPofol">
		insert into report(reporttype, targetid, user_userid, title, userid)
		values('pp', #{param1}, #{param4}, #{param3}, #{param2});
	</insert>

	<delete id="deletePofol">
		delete from portpolio
		where portfolioid = #{param1};
	</delete>


<!--	조석훈 작업-->
	<update id="insertImg">
		update portpolio
		set imgsrc=#{param1}
		where portfolioid=#{param2}
	</update>

	<select id="getPortfolioForHome" resultType="com.team1.careercanvas.vo.PofolVO">
		SELECT p.portfolioid as portfolioid,
		       p.isteam as isteam ,
		       u.username as username,
		       p.portfoliotitle as portfoliotitle,
		       p.category as category,
			p.imgsrc as imgsrc,
			p.partyid as partyid,
			u.profileimg as profileimg,
		       COUNT(pl.user_userid) AS likeCnt
		FROM portpolio p
				 LEFT JOIN portfoliolike pl ON p.portfolioid = pl.portpolio_portfolioid
		left join user u on p.user_userid = u.userid
		GROUP BY p.portfolioid
		ORDER BY likeCnt DESC, p.portfolioid DESC
		LIMIT 4;
	</select>

	<select id="getPortfolioForHomeWithCat" resultType="com.team1.careercanvas.vo.PofolVO">
		SELECT p.portfolioid as portfolioid,
			   p.isteam as isteam ,
			   u.username as username,
			   p.portfoliotitle as portfoliotitle,
			   p.category as category,
			   p.imgsrc as imgsrc,
			   p.partyid as partyid,
			   u.profileimg as profileimg,
			   COUNT(pl.user_userid) AS likeCnt
		FROM portpolio p
				 LEFT outer JOIN portfoliolike pl ON p.portfolioid = pl.portpolio_portfolioid
				 left outer join user u on p.user_userid = u.userid
		where p.category=#{param1}
		GROUP BY p.portfolioid
		ORDER BY likeCnt DESC, p.portfolioid DESC
		LIMIT 4;
	</select>

	<!-- 권혁준 작업 -->
	<select id="getPublicSoloPofol" resultType="com.team1.careercanvas.vo.PofolVO">
		select portpolio.portfoliotitle as portfoliotitle,
		portpolio.portfoliocontent as portfoliocontent,
		portpolio.ispublic as ispublic,
		portpolio.category as category,
		portpolio.imgsrc as imgsrc,
		count(portfoliolike.user_userid) as likeCnt,
		portpolio.view as view,
		user.username as username, 
		user.profileimg as profileimg
		from portpolio
		join user on portpolio.user_userid = user.userid
		left join portfoliolike on portpolio.portfolioid = portfoliolike.portpolio_portfolioid
		<choose>
			<when test="category == 0">
				where 1=1
			</when>
			<when test="category == 1">
				where portpolio.category = "1"
			</when>
			<when test="category == 2">
				where portpolio.category = "2"
			</when>
			<when test="category == 3">
				where portpolio.category = "3"
			</when>
		</choose>	
			and isteam=1
		<choose>
			<when test="searchKey == 'all'">
                AND (portpolio.portfoliotitle LIKE CONCAT('%', #{searchWord}, '%')
				OR user.username LIKE CONCAT('%', #{searchWord}, '%')
				or portpolio.portfoliocontent LIKE CONCAT('%', #{searchWord}, '%'))
            </when>
			<when test="searchKey == 'title'">
				and portfoliotitle like CONCAT('%', #{searchWord}, '%')
			</when>
			<when test="searchKey == 'author'">
				and portpolio.user_userid like CONCAT('%', #{searchWord}, '%')
			</when>
			<when test="searchKey == 'content'">
				and portfoliocontent like CONCAT('%', #{searchWord}, '%')
			</when>
		</choose>
		
		group by portpolio.portfolioid
		<choose>
			<when test="postSort == 1">
				ORDER BY portpolio.portfolioid DESC
			</when>
			<when test="postSort == 2">
				ORDER BY portpolio.view DESC
			</when>
			<when test="postSort == 3">
				ORDER BY COUNT(portfoliolike.user_userid) DESC
			</when>
		</choose>
		limit #{onePageRecord} offset #{offsetPoint}
	</select>

	<select id="getPublicTeamPofol" resultType="com.team1.careercanvas.vo.PofolVO">
		select portpolio.portfoliotitle as portfoliotitle,
		portpolio.portfoliocontent as portfoliocontent,
		portpolio.ispublic as ispublic,
		portpolio.category as category,
		portpolio.imgsrc as imgsrc,
		count(portfoliolike.user_userid) as likeCnt,
		portpolio.view as view,
		party.partyname as username, 
		party.partyimage as profileimg
		from portpolio
		join party on portpolio.partyid = party.partyid
		left join portfoliolike on portpolio.portfolioid = portfoliolike.portpolio_portfolioid
		<choose>
			<when test="category == 0">
				where 1=1
			</when>
			<when test="category == 1">
				where portpolio.category = "1"
			</when>
			<when test="category == 2">
				where portpolio.category = "2"
			</when>
			<when test="category == 3">
				where portpolio.category = "3"
			</when>
		</choose>	
			and isteam=0
		<choose>
			<when test="searchKey == 'all'">
                AND (portpolio.portfoliotitle LIKE CONCAT('%', #{searchWord}, '%')
				OR party.partyname LIKE CONCAT('%', #{searchWord}, '%')
				or portpolio.portfoliocontent LIKE CONCAT('%', #{searchWord}, '%'))
            </when>
			<when test="searchKey == 'title'">
				and portfoliotitle like CONCAT('%', #{searchWord}, '%')
			</when>
			<when test="searchKey == 'author'">
				and party.partyname like CONCAT('%', #{searchWord}, '%')
			</when>
			<when test="searchKey == 'content'">
				and portfoliocontent like CONCAT('%', #{searchWord}, '%')
			</when>
		</choose>
		
		group by portpolio.portfolioid
		<choose>
			<when test="postSort == 1">
				ORDER BY portpolio.portfolioid DESC
			</when>
			<when test="postSort == 2">
				ORDER BY portpolio.view DESC
			</when>
			<when test="postSort == 3">
				ORDER BY COUNT(portfoliolike.user_userid) DESC
			</when>
		</choose>
		limit #{onePageRecord} offset #{offsetPoint}
	</select>

	<select id="getTotalSoloPofol" resultType="Integer">
        select count(portfolioid) from portpolio
        <where>
			isteam=0
			<if test="category != 0">
            	AND category=#{category} 
			</if>
            <if test="searchKey == 'all'">
                AND (portfoliotitle LIKE CONCAT('%', #{searchWord}, '%')
                             OR user_userid LIKE CONCAT('%', #{searchWord}, '%')
                             or portfoliocontent LIKE CONCAT('%', #{searchWord}, '%'))
            </if>
            <if test="searchKey == 'title'">
                AND portfoliotitle LIKE CONCAT('%', #{searchWord}, '%')
            </if>
            <if test="searchKey == 'author'">
                AND user_userid LIKE CONCAT('%', #{searchWord}, '%')
            </if>
            <if test="searchKey == 'content'">
                AND portfoliocontent LIKE CONCAT('%', #{searchWord}, '%')
            </if>
        </where>
    </select>

	<select id="getTotalTeamPofol" resultType="Integer">
        select count(portfolioid) from portpolio
        <where>
			isteam=1
			<if test="category != 0">
            	AND category=#{category} 
			</if>
            <if test="searchKey == 'all'">
                AND (portfoliotitle LIKE CONCAT('%', #{searchWord}, '%')
                             OR user_userid LIKE CONCAT('%', #{searchWord}, '%')
                             or portfoliocontent LIKE CONCAT('%', #{searchWord}, '%'))
            </if>
            <if test="searchKey == 'title'">
                AND portfoliotitle LIKE CONCAT('%', #{searchWord}, '%')
            </if>
            <if test="searchKey == 'author'">
                AND user_userid LIKE CONCAT('%', #{searchWord}, '%')
            </if>
            <if test="searchKey == 'content'">
                AND portfoliocontent LIKE CONCAT('%', #{searchWord}, '%')
            </if>
        </where>
    </select>

	<!-- 정인식 작업-->
	<select id="getMemberList" resultType="com.team1.careercanvas.vo.UserVO">
		select *
		from user
				 join partymember
					  on partymember.user_userid = user.userid
		where partymember.party_partyid = #{param1} and partymember.status = 'done';
	</select>
	<!-- 정인식 작업 끝 -->
</mapper>